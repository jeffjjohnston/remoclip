name: Build and Deploy Docs

on:
  push:
    tags:
      - "v*"     # triggers on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  deploy-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install MkDocs dependencies
        run: |
          pip install uv
          uv sync --dev

      - name: Build docs
        run: uv run mkdocs build -d site

      # -----------------------------------------
      # Upload built site to R2 versioned folder
      # -----------------------------------------
      - name: Deploy versioned docs to Cloudflare R2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
          ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          BUCKET_NAME: remoclip-docs
        run: |
          VERSION=${GITHUB_REF_NAME}   # e.g., "v1.2.0"
          echo "Deploying version ${VERSION}"
          
          aws s3 sync site/ s3://${BUCKET_NAME}/${VERSION}/ \
            --endpoint-url https://${ACCOUNT_ID}.r2.cloudflarestorage.com \
            --delete --acl public-read \
            --cache-control "public,max-age=31536000,immutable"

          echo "${VERSION}" > latest-version.txt
          aws s3 cp latest-version.txt s3://${BUCKET_NAME}/ \
            --endpoint-url https://${ACCOUNT_ID}.r2.cloudflarestorage.com \
            --acl public-read \
            --cache-control "no-store"

      # -----------------------------------------
      # (Optional) Purge Cloudflare cache for /latest/
      # -----------------------------------------
      - name: Purge /latest/ redirect cache
        if: always()
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"files": ["https://remoclip.newmatter.net/latest/"]}'

